name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    services:
      db:
        image: mcr.microsoft.com/mssql/server:latest
        env:
          SA_PASSWORD: "Admin!@#123"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'Admin!@#123' -Q 'SELECT 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Docker Compose
      run: sudo apt-get install docker-compose

    - name: Start Docker Compose
      run: docker-compose up -d

    - name: Wait for MSSQL to be ready
      run: |
        until docker-compose exec -T db /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'Admin!@#123' -Q 'SELECT 1'; do
          echo "Waiting for SQL Server to be up..."
          sleep 5
        done

    - name: Create Database
      run: |
        docker-compose exec -T db /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'Admin!@#123' -Q 'CREATE DATABASE FabTrackDB;'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests
      run: |
        python manage.py test
